name: "Apply Infrastructure and Upload Data"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  deploy:
    name: "Deploy Infrastructure and Upload Data"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Check S3 Bucket Exists
        id: check_bucket
        continue-on-error: true
        run: |
          aws s3 ls s3://terraform-state-ada-1182 && echo "exists=true" >> $GITHUB_OUTPUT || echo "exists=false" >> $GITHUB_OUTPUT

      - name: Terraform Init (Local Backend)
        if: steps.check_bucket.outputs.exists != 'true'
        working-directory: ./IAC
        run: terraform init

      - name: Terraform Apply (Create State Bucket)
        if: steps.check_bucket.outputs.exists != 'true'
        working-directory: ./IAC
        run: terraform apply -auto-approve

      - name: Configure S3 Backend
        if: steps.check_bucket.outputs.exists != 'true'
        working-directory: ./IAC
        run: |
          echo 'terraform {
            backend "s3" {
              bucket = "terraform-state-ada-1182"
              key    = "terraform.tfstate"
              region = "us-east-1"
            }
          }' > backend.tf
          terraform init -force-copy

      - name: Terraform Init (S3 Backend)
        if: steps.check_bucket.outputs.exists == 'true'
        working-directory: ./IAC
        run: terraform init

      - name: Terraform Apply
        working-directory: ./IAC
        run: terraform apply -auto-approve

      - name: Generate CSV File
        working-directory: ./app
        run: python main.py

      - name: Upload CSV to S3
        run: |
          BUCKET_NAME=$(cd IAC && terraform output -raw bucket_contabil_name)
          CSV_FILE=$(ls app/data_*.csv | head -n 1)
          aws s3 cp $CSV_FILE "s3://${BUCKET_NAME}/"